"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[331],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>y});var r=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=c(t),y=l,f=d["".concat(p,".").concat(y)]||d[y]||u[y]||a;return t?r.createElement(f,o(o({ref:n},s),{},{components:t})):r.createElement(f,o({ref:n},s))}));function y(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,o=new Array(a);o[0]=d;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var c=2;c<a;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},76647:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>o,default:()=>s,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=t(87462),l=(t(67294),t(3905));const a={},o=void 0,i={type:"mdx",permalink:"/Replion/",source:"@site/pages/index.md",description:"Replion is a module that allows the replication of information from Server to Client lightly and efficiently.",frontMatter:{}},p=[{value:"Wally",id:"wally",level:2},{value:"<strong>Server</strong>",id:"server",level:3},{value:"<strong>Client</strong>",id:"client",level:3}],c={toc:p};function s(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",{align:"center"},(0,l.kt)("img",{src:".github/logo.svg",height:"180"}),(0,l.kt)("br",null),"Replion is a module that allows the replication of information from Server to Client lightly and efficiently."),(0,l.kt)("h1",{id:"installation"},"Installation"),(0,l.kt)("h2",{id:"wally"},"Wally"),(0,l.kt)("p",null,"Add Replion as a dependency to your ",(0,l.kt)("inlineCode",{parentName:"p"},"wally.toml")," file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'Replion = "ytrev/replion@1.0.0-rc1"\n')),(0,l.kt)("h1",{id:"usage"},"Usage"),(0,l.kt)("p",null,"A simple example that shows how to use Replion."),(0,l.kt)("h3",{id:"server"},(0,l.kt)("strong",{parentName:"h3"},"Server")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"local ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Players = game:GetService('Players')\n\nlocal Replion = require(ReplicatedStorage.Packages.Replion)\nlocal ReplionServer = Replion.Server\n\nlocal function createReplion(player: Player)\n    ReplionServer.new({\n        Channel = 'Data',\n        ReplicateTo = player,\n\n        Data = {\n            Coins = 0,\n        }\n    })\nend\n\nPlayers.PlayerAdded:Connect(createReplion)\n\nfor _, player: Player in Players:GetPlayers() do\n    task.spawn(createReplion, player)\nend\n\nwhile true do\n    for _, player: Player in Players:GetPlayers() do\n        local playerReplion = ReplionService:GetReplionFor(player, 'Data')\n        if playerReplion then\n            playerReplion:Increase('Coins', 10)\n        end\n    end\n\n    task.wait(1)\nend\n")),(0,l.kt)("h3",{id:"client"},(0,l.kt)("strong",{parentName:"h3"},"Client")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"local ReplicatedStorage = game:GetService('ReplicatedStorage')\n\nlocal Replion = require(ReplicatedStorage.Packages.Replion)\nlocal ReplionClient = Replion.Client\n\nReplionClient:AwaitReplion('Data', function(dataReplion)\n    print('Coins:', dataReplion:Get('Coins'))\n\n    local connection = dataReplion:OnChange('Coins', function(newCoins: number, _oldCoins: number)\n        print('Coins:', newCoins)\n    end)\nend)\n")))}s.isMDXComponent=!0}}]);