"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[974],{49652:function(e){e.exports=JSON.parse('{"functions":[{"name":"OnUpdate","desc":"If the path is a root, then the callback will be: `(action: Enums, path: { string }, value: any, oldValue: any) -> ()`\\n\\nExample:\\n```lua\\n-- \\"Pets\\" is a root.\\t\\nreplion:OnUpdate(\'Pets\', function(action: Enum, path: { string }, newValue: any, oldValue: any)\\nend)\\n\\n-- \\"Stats.Coins\\" is not a root.\\nreplion:OnUpdate(\'Stats.Coins\', function(action: Enum, newValue: any, oldValue: any)\\nend)\\n```\\n\\nThe params for the callback change if the path is an Array.\\nIf is an Array, there are three options:\\n\\t- If a value is added: (action: Enum, index: number, value: any) -> ()\\n\\t- If a value is removed: (action: Enum, index: number, oldValue: any) -> ()\\n\\t- If the array is cleared: (action: Enum, oldValue: { any }}) -> ()","params":[{"name":"path","desc":"","lua_type":"Path"},{"name":"callback","desc":"","lua_type":"(action: Enum, newValue: any, oldValue: any) -> ()"}],"returns":[{"desc":"","lua_type":"Types.Connection\\r\\n"}],"function_type":"method","source":{"line":73,"path":"src/ReplionController/ClientReplion.lua"}},{"name":"BeforeDestroy","desc":"","params":[{"name":"callback","desc":"","lua_type":"() -> ()"}],"returns":[{"desc":"","lua_type":"Types.Connection\\r\\n"}],"function_type":"method","source":{"line":84,"path":"src/ReplionController/ClientReplion.lua"}},{"name":"Get","desc":"Returns the value at the path.","params":[{"name":"path","desc":"","lua_type":"Path"}],"returns":[{"desc":"","lua_type":"any"}],"function_type":"method","source":{"line":97,"path":"src/ReplionController/ClientReplion.lua"}},{"name":"GetCopy","desc":"Returns a copy of the data in the given path.","params":[{"name":"path","desc":"","lua_type":"Path"}],"returns":[{"desc":"","lua_type":"any"}],"function_type":"method","source":{"line":110,"path":"src/ReplionController/ClientReplion.lua"}}],"properties":[{"name":"Data","desc":"The player Data table.","lua_type":"{ [any]: any }","readonly":true,"source":{"line":23,"path":"src/ReplionController/ClientReplion.lua"}},{"name":"Tags","desc":"The replion Tags.","lua_type":"{ string }","readonly":true,"source":{"line":30,"path":"src/ReplionController/ClientReplion.lua"}}],"types":[],"name":"ClientReplion","desc":"","realm":["Client"],"source":{"line":35,"path":"src/ReplionController/ClientReplion.lua"}}')}}]);