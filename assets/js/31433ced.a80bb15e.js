"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[587],{76830:e=>{e.exports=JSON.parse('{"functions":[{"name":"BeforeDestroy","desc":"Connects to a signal that is fired when the :Destroy() method is called.","params":[{"name":"self","desc":"","lua_type":"ClientReplion"},{"name":"callback","desc":"","lua_type":"(replion: ClientReplion) -> ()"}],"returns":[{"desc":"","lua_type":"RBXScriptConnection"}],"function_type":"static","source":{"line":106,"path":"src/Client/ClientReplion.lua"}},{"name":"OnExecute","desc":"This event is fired when a Extension is executed. The callback will be called with the return values of the Extension.","params":[{"name":"self","desc":"","lua_type":"ClientReplion"},{"name":"name","desc":"","lua_type":"string"},{"name":"callback","desc":"","lua_type":"(...any) -> (...any)"}],"returns":[{"desc":"","lua_type":"RBXScriptConnection"}],"function_type":"static","source":{"line":115,"path":"src/Client/ClientReplion.lua"}},{"name":"OnChange","desc":"```lua\\nreplion:OnChange(\'Coins\', function(newValue: any, oldValue: any)\\n\\tprint(newValue, oldValue)\\nend)\\n```\\n\\n\\n\\nThis function is called when the value of the path changes.","params":[{"name":"self","desc":"","lua_type":"ClientReplion"},{"name":"path","desc":"","lua_type":"Path"},{"name":"callback","desc":"","lua_type":"ChangeCallback"}],"returns":[{"desc":"","lua_type":"RBXScriptConnection"}],"function_type":"static","source":{"line":140,"path":"src/Client/ClientReplion.lua"}},{"name":"OnDescendantChange","desc":"```lua\\n-- On the server\\nreplion:Set({\'Areas\', \'Ice\'}, true)\\n```\\n\\n```lua\\nreplion:OnDescendantChange(\'Areas\', function(path: { string }, newValue: any, oldValue: any)\\n\\tprint(path, newValue, oldValue)\\nend)\\n```\\n\\n\\n\\nThis event will be fired when any descendant of the path is changed.","params":[{"name":"self","desc":"","lua_type":"ClientReplion"},{"name":"path","desc":"","lua_type":"Path"},{"name":"callback","desc":"","lua_type":"(path: { string }, newDescendantValue: any, oldDescendantValue: any) -> ()"}],"returns":[{"desc":"","lua_type":"RBXScriptConnection"}],"function_type":"static","source":{"line":168,"path":"src/Client/ClientReplion.lua"}},{"name":"OnArrayInsert","desc":"Connects to a signal that is fired when a value is inserted in the array at the given path.","params":[{"name":"self","desc":"","lua_type":"ClientReplion"},{"name":"path","desc":"","lua_type":"Path"},{"name":"callback","desc":"","lua_type":"(index: number, value: any) -> ()"}],"returns":[{"desc":"","lua_type":"RBXScriptConnection"}],"function_type":"static","source":{"line":184,"path":"src/Client/ClientReplion.lua"}},{"name":"OnArrayRemove","desc":"Connects to a signal that is fired when a value is removed in the array at the given path.","params":[{"name":"self","desc":"","lua_type":"ClientReplion"},{"name":"path","desc":"","lua_type":"Path"},{"name":"callback","desc":"","lua_type":"(index: number, value: any) -> ()"}],"returns":[{"desc":"","lua_type":"RBXScriptConnection"}],"function_type":"static","source":{"line":200,"path":"src/Client/ClientReplion.lua"}},{"name":"Get","desc":"```lua\\nlocal coins: number = newReplion:Get(\'Coins\')\\nlocal data = newReplion:Get() --\x3e Returns the entire data\\n```\\n\\nReturns the value at the given path. If no path is given, returns the entire data table.","params":[{"name":"self","desc":"","lua_type":"ClientReplion"},{"name":"path","desc":"","lua_type":"Path?"}],"returns":[{"desc":"","lua_type":"any\\n"}],"function_type":"static","source":{"line":217,"path":"src/Client/ClientReplion.lua"}},{"name":"Set","desc":"","params":[{"name":"self","desc":"","lua_type":"ClientReplion"},{"name":"path","desc":"","lua_type":"Path"},{"name":"newValue","desc":"","lua_type":"T"}],"returns":[{"desc":"","lua_type":"T\\n"}],"function_type":"static","private":true,"source":{"line":230,"path":"src/Client/ClientReplion.lua"}},{"name":"Update","desc":"","params":[{"name":"self","desc":"","lua_type":"ClientReplion"},{"name":"path","desc":"","lua_type":"Path | Dictionary"},{"name":"toUpdate","desc":"","lua_type":"Dictionary?"}],"returns":[{"desc":"","lua_type":"Dictionary?\\n"}],"function_type":"static","private":true,"source":{"line":251,"path":"src/Client/ClientReplion.lua"}},{"name":"Increase","desc":"","params":[{"name":"self","desc":"","lua_type":"ClientReplion"},{"name":"path","desc":"","lua_type":"Path"},{"name":"amount","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number\\n"}],"function_type":"static","private":true,"source":{"line":302,"path":"src/Client/ClientReplion.lua"}},{"name":"Decrease","desc":"","params":[{"name":"self","desc":"","lua_type":"ClientReplion"},{"name":"path","desc":"","lua_type":"Path"},{"name":"amount","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number\\n"}],"function_type":"static","private":true,"source":{"line":311,"path":"src/Client/ClientReplion.lua"}},{"name":"Insert","desc":"","params":[{"name":"self","desc":"","lua_type":"ClientReplion"},{"name":"path","desc":"","lua_type":"Path"},{"name":"value","desc":"","lua_type":"T"},{"name":"index","desc":"","lua_type":"number?"}],"returns":[{"desc":"","lua_type":"number"},{"desc":"","lua_type":"T"}],"function_type":"static","private":true,"source":{"line":318,"path":"src/Client/ClientReplion.lua"}},{"name":"Remove","desc":"","params":[{"name":"self","desc":"","lua_type":"ClientReplion"},{"name":"path","desc":"","lua_type":"Path"},{"name":"index","desc":"","lua_type":"number?"}],"returns":[{"desc":"","lua_type":"any"}],"function_type":"static","private":true,"source":{"line":339,"path":"src/Client/ClientReplion.lua"}},{"name":"Clear","desc":"","params":[{"name":"self","desc":"","lua_type":"ClientReplion"},{"name":"path","desc":"","lua_type":"Path"}],"returns":[],"function_type":"static","private":true,"source":{"line":373,"path":"src/Client/ClientReplion.lua"}},{"name":"Execute","desc":"","params":[{"name":"self","desc":"","lua_type":"ClientReplion"},{"name":"name","desc":"","lua_type":"string"},{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"static","private":true,"source":{"line":388,"path":"src/Client/ClientReplion.lua"}}],"properties":[{"name":"Extensions","desc":"","lua_type":"{ [string]: (...any) -> (...any) }?","readonly":true,"source":{"line":50,"path":"src/Client/ClientReplion.lua"}},{"name":"Destroyed","desc":"","lua_type":"boolean?","readonly":true,"source":{"line":56,"path":"src/Client/ClientReplion.lua"}},{"name":"Data","desc":"","lua_type":"{ [any]: any }","readonly":true,"source":{"line":62,"path":"src/Client/ClientReplion.lua"}},{"name":"Tags","desc":"","lua_type":"{ string }?","readonly":true,"source":{"line":68,"path":"src/Client/ClientReplion.lua"}}],"types":[{"name":"Path","desc":"","lua_type":"string | { string }","source":{"line":34,"path":"src/Client/ClientReplion.lua"}},{"name":"ChangeCallback","desc":"","lua_type":"(newValue: any, oldValue: any) -> ()","source":{"line":39,"path":"src/Client/ClientReplion.lua"}},{"name":"ExtensionCallback","desc":"","lua_type":"(replion: ClientReplion, ...any) -> ()","source":{"line":44,"path":"src/Client/ClientReplion.lua"}}],"name":"ClientReplion","desc":"","realm":["Client"],"source":{"line":74,"path":"src/Client/ClientReplion.lua"}}')}}]);